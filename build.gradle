buildscript {
  repositories { 
    mavenLocal() 
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE")
  }
}

plugins { 
  id "io.spring.dependency-management" version "1.0.4.RELEASE" 
  id "com.github.kt3k.coveralls" version "2.8.1" 
  // id "de.aaschmid.cpd" version "1.0"
  id "org.owasp.dependencycheck" version "3.1.2"
  id "com.dorongold.task-tree" version "1.5"
  id "org.ajoberstar.grgit" version "2.0.1"
  // id "com.github.spotbugs" version "1.6.1"
  id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'edu.kit.datamanager.metastore'
version = '0.3.0'

println "Building ${name} version: ${version}"

jar {
  baseName = 'metastore-service'
  version =  '0.3.0'
}

bootJar {
	launchScript()
}

repositories { 
  mavenLocal() 
  mavenCentral()
  jcenter()
  maven {
    url "./localRepo"
  }
}


sourceCompatibility = 1.8
targetCompatibility = 1.8
 
configurations {
  //   all*.exclude module : 'spring-boot-starter-logging'
}

if (project.hasProperty('travis')) {
    println 'Using travis profile for building ' + project.getName()
    apply from: 'gradle/build_dependencies.gradle'
    apply from: 'gradle/profile-travis.gradle'
} else if (project.hasProperty('release') || project.hasProperty('clean-release')) {
    println 'Using release profile for building ' + project.getName()
    apply from: 'gradle/build_dependencies.gradle'
    apply from: 'gradle/profile-release.gradle'
} 

dependencies {
  // Local dependencies
  implementation "org.fzk.ipe:Tools:1.6"
  implementation "jaxen:jaxen:1.1.6"
  implementation "org.jdom:jdom:1.1"

  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
  implementation "org.springframework.boot:spring-boot-starter-security"
  //implementation "org.springframework.boot:spring-boot-starter-actuator"
  //implementation "org.springframework.boot:spring-boot-starter-data-jpa"
  //implementation "org.springframework.security:spring-security-config"
  
  // Swagger UI
  implementation "io.springfox:springfox-swagger2:2.9.2"
  implementation "io.springfox:springfox-swagger-ui:2.9.2"
  
  implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.9.1"
  implementation "com.fasterxml.jackson.module:jackson-module-afterburner:2.7.1"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.5"
   
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.0"
   
  implementation "io.jsonwebtoken:jjwt:0.9.0"

  implementation "com.github.fge:json-patch:1.9"
  
  // ArangoDB
  implementation "com.arangodb:arangodb-spring-data:3.1.1"
  implementation "org.apache.httpcomponents:httpclient:4.5.1"
   
  implementation "org.apache.commons:commons-lang3:3.6"
  implementation "commons-io:commons-io:2.5"
   
  implementation "org.apache.commons:commons-collections4:4.1"
   
  implementation "org.slf4j:slf4j-api:1.7.25"
  implementation "ch.qos.logback:logback-classic:1.2.3"
  
  // sub modules
  // bag it
  implementation "edu.kit.ocrd:bagging:0.2.0"
  implementation "edu.kit.ocrd:ocrd-workspace:0.2.0"
  implementation "edu.kit.ocrd:ocrd-metadata:0.4.0"
  implementation ("edu.kit.datamanager:service-base:0.1") { 
    exclude group: '*'    
  } 

  // Stub for KIT DM 2.0
  implementation "io.swagger:swagger-java-client:1.0.1"
  // Stub for KIT DM 2.0 Auth
  implementation "io.swagger:java-auth-client:1.0.0"
  //implementation "org.eclipse.persistence:javax.persistence:2.1.0"
  runtimeOnly "org.projectlombok:lombok"

  testImplementation "junit:junit:4.12"

  testImplementation "org.mockito:mockito-core:2.8.9"
  testImplementation "org.powermock:powermock-module-junit4:1.7.4"
  testImplementation "org.powermock:powermock-api-mockito2:1.7.4"
  
  // Test 
  testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "org.springframework:spring-test"
  testImplementation "org.springframework.security:spring-security-test" 
}


jacocoTestReport {
  group = "Reporting"
  reports {
    xml.enabled true
    html.enabled true
    html.destination file("${buildDir}/reports/coverage")
  }
  afterEvaluate {
    classDirectories.from(classDirectories.files.collect {
        fileTree(dir: it, exclude: [
                    '**/CrudRunner.class'
          ])
      })
  }
}